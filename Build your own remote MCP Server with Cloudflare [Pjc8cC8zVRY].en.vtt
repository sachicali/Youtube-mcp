WEBVTT
Kind: captions
Language: en

00:00:00.001 --> 00:00:05.280
I have been having so much fun lately exploring the model context protocol,

00:00:05.280 --> 00:00:10.640
and I want to show you all two quick ways to build your own remote MCP servers.

00:00:10.640 --> 00:00:14.720
But before we do that, just in case you've never heard of MCP,

00:00:14.720 --> 00:00:20.640
or you haven't quite understood why there's so much excitement in the community about MCP,

00:00:20.640 --> 00:00:24.080
I want to try to explain it using a brief metaphor.

00:00:24.080 --> 00:00:27.760
A metaphor that involves one of my favorite video games of all time,

00:00:27.760 --> 00:00:32.960
The Legend of Zelda. I grew up playing this game with my dad on the Nintendo,

00:00:32.960 --> 00:00:38.480
but whether you've played it or not, you've probably seen this image where Link's walking

00:00:38.480 --> 00:00:43.360
into the cave and the old man says, "It's dangerous to go alone. Take this."

00:00:43.360 --> 00:00:49.280
And this image to me captures so much of why I'm excited about MCP.

00:00:49.280 --> 00:00:54.960
So you can think of Link as whatever AI tool you're using, Claw, the cursor, something else.

00:00:54.960 --> 00:00:59.200
And you can think of your MCP server as the old man in the cave that says,

00:00:59.200 --> 00:01:05.040
"I see what's ahead, what you're trying to do, and this tool is going to help you.

00:01:05.040 --> 00:01:09.280
Take this, and life is going to be a lot easier."

00:01:09.280 --> 00:01:15.440
So keep this metaphor in mind as we're building our remote MCP servers today.

00:01:15.440 --> 00:01:20.240
See if it resonates. If it doesn't, send me a better one, and I'll start using that one instead.

00:01:20.240 --> 00:01:22.720
But this one has really worked for me as I'm building.

00:01:23.440 --> 00:01:28.560
The first thing I want to show you is a template you can use to build a remote MCP server

00:01:28.560 --> 00:01:32.640
without authentication, meaning that just anyone can use this.

00:01:32.640 --> 00:01:37.040
So we're going to copy this command here. We're going to jump into Terminal.

00:01:37.040 --> 00:01:40.080
And what this does is it takes this template we've created,

00:01:40.080 --> 00:01:43.440
and it's going to set it up for us using Cloudflare Workers.

00:01:43.440 --> 00:01:49.040
It'll take care of all our dependencies, and we'll be ready to go once this finishes.

00:01:49.040 --> 00:01:52.240
So it's going to ask us if we want to use Git. We'll say no.

00:01:52.240 --> 00:01:55.920
And we're not going to deploy it yet. We'll just hop into our folder,

00:01:55.920 --> 00:01:58.720
and we'll start up our application.

00:01:58.720 --> 00:02:02.640
This is an MCP server we already have configured on Cloud.

00:02:02.640 --> 00:02:08.240
So I can open up Cloud. And when this loads, you can see we have two MCP tools available.

00:02:08.240 --> 00:02:12.960
Our MCP server is a math server, so it has two tools, add and calculate.

00:02:12.960 --> 00:02:18.720
I can say, "Hey, Cloud. I misplaced my calculator.

00:02:19.440 --> 00:02:24.640
Can you use the add tool to add 27 plus 4?"

00:02:24.640 --> 00:02:31.360
And this will load up. It'll detect that we have a tool we can use.

00:02:31.360 --> 00:02:35.760
We can give it permission to use that add function on our math MCP server.

00:02:35.760 --> 00:02:40.080
We'll allow that for this chat. It'll get the results,

00:02:40.080 --> 00:02:43.360
and it'll say the sum of 27 plus 4 is 31.

00:02:43.360 --> 00:02:46.800
Now that you've seen our MCP server in action,

00:02:46.800 --> 00:02:49.120
let's hop over to Cursor and take a look at the code.

00:02:49.440 --> 00:02:55.440
We have our MCP server here, and most of our code is in this index.tx.

00:02:55.440 --> 00:02:57.680
I'm going to go into Zen mode, which I just learned about.

00:02:57.680 --> 00:03:03.120
So you can do Command-R-Z. Just make it a little less busy

00:03:03.120 --> 00:03:05.040
so we can really focus on this code.

00:03:05.040 --> 00:03:10.320
And you'll see here is our add tool. It looks exactly how we would expect.

00:03:10.320 --> 00:03:16.000
We have a little bit more complicated calculate tool, and I want to add a new tool.

00:03:16.000 --> 00:03:22.720
So I'm going to say this server.tool, and I'm going to call this one getRandomNumber,

00:03:22.720 --> 00:03:26.880
and we'll have the code here that generates a random number.

00:03:26.880 --> 00:03:31.120
Now, if we open Cloud Backup, which I'll do now,

00:03:31.120 --> 00:03:35.840
we should see, instead of two tools, three tools.

00:03:35.840 --> 00:03:40.080
So now we have our add, our calculate, and our getRandomNumber,

00:03:40.080 --> 00:03:46.000
and I can say, "Hey, can you use the tool to give me a random number?"

00:03:46.000 --> 00:03:50.000
And I love this example, as simple as it is,

00:03:50.000 --> 00:03:54.480
because if you've played with any LLM on trying to get random numbers,

00:03:54.480 --> 00:03:56.960
you'll notice that it's not exactly random,

00:03:56.960 --> 00:04:00.480
and not in the way that computers aren't good at randomness,

00:04:00.480 --> 00:04:05.280
but in a way that it's almost predictable what result you'll get.

00:04:05.280 --> 00:04:08.240
And so now we get this result of 18.

00:04:08.240 --> 00:04:11.600
If I open this up again and say the same thing,

00:04:11.600 --> 00:04:16.960
"Can you use the random number tool to give me a number?"

00:04:16.960 --> 00:04:21.600
It should give us something different than 18,

00:04:21.600 --> 00:04:23.680
and so it's going to ask for our permission again,

00:04:23.680 --> 00:04:28.160
and this time, instead of 18, it's giving us 79.

00:04:28.160 --> 00:04:32.240
And so as simple as a MCP server as it is,

00:04:32.240 --> 00:04:37.840
it actually takes something that an LLM isn't great at generating random numbers,

00:04:37.840 --> 00:04:41.680
and it gives it the ability to be really, really good at that.

00:04:41.680 --> 00:04:44.880
And so I love using this as an example.

00:04:44.880 --> 00:04:50.080
That is our authless MCP server, but if you're building an MCP server,

00:04:50.080 --> 00:04:54.000
you probably want some kind of auth a lot of the time.

00:04:54.000 --> 00:04:57.520
So I want to jump into our second example,

00:04:57.520 --> 00:05:02.800
and this is using our template that uses GitHub OAuth.

00:05:02.800 --> 00:05:05.040
And I went ahead and I've set this up

00:05:05.040 --> 00:05:07.760
because you've already seen me run through the setup.

00:05:07.760 --> 00:05:12.560
The only difference here is I have to put these different keys,

00:05:12.560 --> 00:05:17.520
and I definitely don't want the internet to see my GitHub client secret.

00:05:17.520 --> 00:05:18.640
That's for sure.

00:05:18.640 --> 00:05:19.760
And I've deployed this.

00:05:19.760 --> 00:05:23.520
So what I want to show you is actually this really, really cool thing

00:05:23.520 --> 00:05:28.880
that I recently discovered, which is the model context protocol inspector.

00:05:28.880 --> 00:05:33.520
Open this in an incognito window because I want you to see it fresh.

00:05:33.520 --> 00:05:37.200
I'm going to switch this over to SSE.

00:05:37.200 --> 00:05:40.960
I'm going to paste in my domain and I'll hit connect.

00:05:40.960 --> 00:05:44.400
And this will ask me to auth.

00:05:44.400 --> 00:05:49.840
So it says the MCP is requesting to be authorized by the Cloudflare GitHub MCP server.

00:05:50.480 --> 00:05:54.560
I'll hit approve, and then it connected me via GitHub.

00:05:54.560 --> 00:05:57.040
What I can do now is I can hit list tools,

00:05:57.040 --> 00:06:02.640
and we have our famous ad tool again, but we also have our user info Octocat.

00:06:02.640 --> 00:06:06.800
So if I run this, this will get information about my GitHub user.

00:06:06.800 --> 00:06:11.920
So you can see my login is Ricky Robinette and my avatar URL.

00:06:11.920 --> 00:06:17.360
So suddenly we now have access to a bunch of things we didn't before because we're authed in.

00:06:18.240 --> 00:06:22.560
And I want to jump into the code for this one to show you something that I really liked.

00:06:22.560 --> 00:06:28.080
Now you can see here's our ad function, here's our user info Octocat,

00:06:28.080 --> 00:06:31.520
and how that request happens.

00:06:31.520 --> 00:06:36.560
But there's also something really cool here, which is an allowed username.

00:06:36.560 --> 00:06:43.840
So this allows us to gate certain tools based on the user's GitHub username.

00:06:43.840 --> 00:06:48.640
So you'll notice we have this check if they have the username that's in our list,

00:06:48.640 --> 00:06:50.640
they get this generate image tool.

00:06:50.640 --> 00:06:55.120
And so I'm going to add myself to this.

00:06:55.120 --> 00:07:04.880
I'm going to hop over here, and I'm going to deploy this

00:07:04.880 --> 00:07:11.040
so that it has our newest code on my server because this is running remotely.

00:07:11.680 --> 00:07:18.160
And once this is deployed, which it is now, I can hop back over here to our inspector.

00:07:18.160 --> 00:07:20.960
I'll clear our tools, and I'll list them.

00:07:20.960 --> 00:07:24.480
And you'll see we have the generate image function.

00:07:24.480 --> 00:07:32.640
And I can say an orange cloud made out of yarn.

00:07:32.640 --> 00:07:35.760
And it says it works best with eight steps.

00:07:35.760 --> 00:07:40.160
So I will run this tool that we didn't even know existed before.

00:07:40.160 --> 00:07:41.280
Oh, and that was pretty good.

00:07:41.280 --> 00:07:44.960
That is an orange cloud made out of yarn.

00:07:44.960 --> 00:07:51.280
And so I really love not just the authentication process that happens when you do this,

00:07:51.280 --> 00:07:57.280
but the ability to gate different tools that a user has access to based on what we know about them.

00:07:57.280 --> 00:07:58.960
So I'm going to stop there.

00:07:58.960 --> 00:08:06.880
Both of these examples are on our GitHub in the Cloudflare AI repo under demos.

00:08:06.880 --> 00:08:08.320
You can get started with them.

00:08:08.320 --> 00:08:11.680
Also, drop the links so you can get to them very quickly.

00:08:11.680 --> 00:08:17.200
We really, really can't wait to see what you all cook up with MCP.

00:08:17.200 --> 00:08:21.440
Tell us about it on X, on LinkedIn, on Blue Sky.

00:08:21.440 --> 00:08:22.960
Hang out in our Discord.

00:08:22.960 --> 00:08:30.560
You can get to that at discord.cloudflare.com or on our community forums at community.cloudflare.com.

00:08:30.560 --> 00:08:35.760
I hope you all have as much fun as I've had building with MCP.

00:08:35.760 --> 00:08:39.600
And truly, truly can't wait to see all the different things you all build.

00:08:39.600 --> 00:08:41.040
Thanks a lot.

